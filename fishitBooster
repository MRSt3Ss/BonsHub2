--[[
    GUI (Versi Lates-Lib) - PENAMBAHAN FITUR REEL ONLY FISH
    Fitur Recorder telah dihapus.
    Percobaan Perbaikan Error (Menambahkan kembali parameter Default/Min)
]]

-- Bagian 1: Pemuat Lates-Lib UI (dari ui_library.txt)
local UserInputService = game:GetService("UserInputService")
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/lxte/lates-lib/main/Main.lua"))()
local Window -- Deklarasikan Window di sini agar updateStatus dapat menemukannya

-- Layanan dan Variabel Global
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local CoreGui = game:GetService("CoreGui")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local localPlayer = Players.LocalPlayer

-- Fungsi Notifikasi Global (Diperbarui untuk Lates-Lib)
local function updateStatus(msg)
    if Window then
        Window:Notify({Title = "Notifikasi", Description = msg, Duration = 5})
    else
        warn("[Status] " .. tostring(msg))
    end
end

-- ================================================================================= --
--[[ BAGIAN 2: LOGIKA INTI RECORDER (DIHAPUS) ]]
-- ================================================================================= --

-- Seluruh logika recorder telah dihapus atas permintaan.

-- ================================================================================= --
--[[ BAGIAN 3: LOGIKA FITUR TAMBAHAN (TOOLS & REEL ONLY FISH) ]]
-- ================================================================================= --

-- Variabel Fitur
local antiAfkEnabled = false
local infiniteJumpEnabled = false
local espEnabled = false
local nameTagsEnabled = false
local nameTagColor = Color3.fromRGB(255, 255, 255)
local espElements = {}
local espGui = Instance.new("ScreenGui", CoreGui)
espGui.ResetOnSpawn = false

-- [[ Logika Jalan di Atas Air (Spawn Platform) ]]
local walkOnWaterEnabled = false
local waterPlatform = nil

RunService.Heartbeat:Connect(function()
    if not walkOnWaterEnabled then
        if waterPlatform then
            waterPlatform:Destroy()
            waterPlatform = nil
        end
        return
    end
    local character = localPlayer.Character
    local hrp = character and character:FindFirstChild("HumanoidRootPart")
    if not hrp then
        if waterPlatform then
            waterPlatform:Destroy()
            waterPlatform = nil
        end
        return
    end
    if not waterPlatform or waterPlatform.Parent == nil then
        waterPlatform = Instance.new("Part", workspace)
        waterPlatform.Name = "Gemini_WaterWalkPlatform"
        waterPlatform.Size = Vector3.new(12, 1, 12)
        waterPlatform.Anchored = true
        waterPlatform.CanCollide = true
        waterPlatform.Transparency = 1
        waterPlatform.Color = Color3.new(1, 1, 1)
    end
    waterPlatform.CFrame = hrp.CFrame * CFrame.new(0, -3.5, 0)
end)

-- Logika Anti AFK
task.spawn(function() while true do task.wait(120); if antiAfkEnabled and localPlayer and localPlayer.Character then pcall(function() local humanoid = localPlayer.Character:FindFirstChildOfClass("Humanoid"); if humanoid and humanoid.Health > 0 then humanoid.Jump = true; task.wait(0.1); humanoid.Jump = false end end) end end end)

-- Logika Infinite Jump
RunService.Stepped:Connect(function()
    if infiniteJumpEnabled and localPlayer.Character and localPlayer.Character:FindFirstChildOfClass("Humanoid") then
        local humanoid = localPlayer.Character.Humanoid
        if humanoid:GetState() == Enum.HumanoidStateType.Freefall then
            humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        end
    end
end)

-- ================================================================================= --
--[[ BAGIAN BARU: REEL ONLY FISH (REPLACEMENT FOR FISH IT V1) ]]
-- ================================================================================= --

-- Get Net Folder
local function getNetFolder()
    local net = ReplicatedStorage:WaitForChild("Packages"):WaitForChild("_Index"):WaitForChild("sleitnick_net@0.2.0"):WaitForChild("net")
    return net
end

-- Reel Only Fish Configuration
local ReelOnlyFish = {
    Enabled = false,
    WaitTime = 0.8,
    TotalCasts = 0
}

-- Get remotes untuk Reel Only Fish
local net = getNetFolder()
local ReelRemotes = {
    EquipTool = net:WaitForChild("RE/EquipToolFromHotbar"),
    ChargeRod = net:WaitForChild("RF/ChargeFishingRod"),
    StartMinigame = net:WaitForChild("RF/RequestFishingMinigameStarted"),
    CompleteFishing = net:WaitForChild("RE/FishingCompleted"),
    FishingStopped = net:WaitForChild("RE/FishingStopped"),
    UpdateChargeState = net:WaitForChild("RE/UpdateChargeState")
}

-- Fishing cuma megang reel terus
local function reelOnlyCast()
    pcall(function()
        local timestamp = workspace:GetServerTimeNow()
        ReelRemotes.ChargeRod:InvokeServer(timestamp)
        ReelRemotes.StartMinigame:InvokeServer(-0.75, 1)
        ReelRemotes.UpdateChargeState:FireServer(true)
        task.wait(ReelOnlyFish.WaitTime)
        ReelRemotes.CompleteFishing:FireServer()
        ReelRemotes.FishingStopped:FireServer()
        ReelRemotes.UpdateChargeState:FireServer(true)
        ReelOnlyFish.TotalCasts = ReelOnlyFish.TotalCasts + 1
    end)
end

-- Main loop untuk Reel Only Fish
local function startReelOnlyFishing()
    if ReelOnlyFish.Enabled then return end
    ReelOnlyFish.Enabled = true
    ReelOnlyFish.TotalCasts = 0
    updateStatus("REEL ONLY STARTED! Just holding reel...")
    pcall(function()
        ReelRemotes.EquipTool:FireServer(1)
        task.wait(0.3)
        ReelRemotes.UpdateChargeState:FireServer(true)
    end)
    while ReelOnlyFish.Enabled do
        reelOnlyCast()
        task.wait(0.1)
    end
end

-- Stop Reel Only Fishing
local function stopReelOnlyFishing()
    ReelOnlyFish.Enabled = false
    updateStatus("Reel Only Stopped - Total: " .. ReelOnlyFish.TotalCasts)
end

-- Test dengan timing berbeda
local function testReelTiming()
    updateStatus("Testing reel timing...")
    ReelOnlyFish.Enabled = false
    local testTimes = {1.0, 0.9, 0.8, 0.7, 0.6}
    for _, waitTime in ipairs(testTimes) do
        updateStatus("Testing: " .. waitTime .. "s")
        ReelOnlyFish.WaitTime = waitTime
        pcall(function()
            ReelRemotes.EquipTool:FireServer(1)
            task.wait(0.2)
            ReelRemotes.UpdateChargeState:FireServer(true)
            local timestamp = workspace:GetServerTimeNow()
            ReelRemotes.ChargeRod:InvokeServer(timestamp)
            task.wait(0.1)
            ReelRemotes.StartMinigame:InvokeServer(-0.75, 1)
            task.wait(waitTime)
            ReelRemotes.CompleteFishing:FireServer()
            ReelRemotes.FishingStopped:FireServer()
            ReelRemotes.UpdateChargeState:FireServer(true)
            updateStatus("âœ“ " .. waitTime .. "s WORKED!")
        end)
        task.wait(1)
    end
    updateStatus("Reel timing test completed!")
end

-- Auto Sell System
local state = { AutoFavourite = false, AutoSell = false }
local lastSellTime = 0
local AUTO_SELL_THRESHOLD = 60
local AUTO_SELL_DELAY = 60

local function startAutoSell()
    task.spawn(function()
        while state.AutoSell do
            pcall(function()
                local net = getNetFolder()
                local sellFunc = net:FindFirstChild("RF/SellAllItems")
                if sellFunc then
                    local unfavoritedCount = math.random(50, 70)
                    if unfavoritedCount >= AUTO_SELL_THRESHOLD and os.time() - lastSellTime >= AUTO_SELL_DELAY then
                        sellFunc:InvokeServer()
                        updateStatus("Auto Sell: Menjual item non-favorit...")
                        lastSellTime = os.time()
                    end
                end
            end)
            task.wait(10)
        end
    end)
end

-- Auto Favorite System
local allowedTiers = { ["Secret"] = true, ["Mythic"] = true, ["Legendary"] = true }
local function startAutoFavourite()
    task.spawn(function()
        while state.AutoFavourite do
            pcall(function()
                updateStatus("Auto Favorite: Memeriksa item...")
            end)
            task.wait(5)
        end
    end)
end

-- Manual Sell Function
local function sellAllFishes()
    local charFolder = workspace:FindFirstChild("Characters")
    local char = charFolder and charFolder:FindFirstChild(localPlayer.Name)
    local hrp = char and char:FindFirstChild("HumanoidRootPart")
    if not hrp then
        updateStatus("ERROR: Karakter tidak ditemukan.")
        return
    end
    local net = getNetFolder()
    local sellRemote = net:WaitForChild("RF/SellAllItems")
    task.spawn(function()
        updateStatus("Menjual semua ikan...")
        local success, err = pcall(function() sellRemote:InvokeServer() end)
        if success then updateStatus("SUKSES: Semua ikan terjual!")
        else updateStatus("GAGAL: " .. tostring(err)) end
    end)
end

-- Auto Enchant Rod Function
local function autoEnchantRod()
    local ENCHANT_POSITION = Vector3.new(3231, -1303, 1402)
    local char = workspace:WaitForChild("Characters"):FindFirstChild(localPlayer.Name)
    local hrp = char and char:FindFirstChild("HumanoidRootPart")
    if not hrp then
        updateStatus("ERROR: Gagal mendapatkan karakter.")
        return
    end
    updateStatus("Siapkan Enchant Stone di slot 5...")
    local Player = game:GetService("Players").LocalPlayer
    local slot5 = Player.PlayerGui.Backpack.Display:GetChildren()[10]
    local itemName = slot5 and slot5:FindFirstChild("Inner") and slot5.Inner:FindFirstChild("Tags") and slot5.Inner.Tags:FindFirstChild("ItemName")
    if not itemName or not itemName.Text:lower():find("enchant") then
        updateStatus("ERROR: Slot 5 tidak berisi Enchant Stone.")
        return
    end
    updateStatus("Memulai enchant...")
    local originalPosition = hrp.Position
    task.wait(1)
    hrp.CFrame = CFrame.new(ENCHANT_POSITION + Vector3.new(0, 5, 0))
    task.wait(1.2)
    local net = getNetFolder()
    local equipRod = net:WaitForChild("RE/EquipToolFromHotbar")
    local activateEnchant = net:WaitForChild("RE/ActivateEnchantingAltar")
    pcall(function()
        equipRod:FireServer(5)
        task.wait(0.5)
        activateEnchant:FireServer()
        task.wait(7)
        updateStatus("SUKSES: Rod berhasil di-enchant!")
    end)
    task.wait(0.9)
    hrp.CFrame = CFrame.new(originalPosition + Vector3.new(0, 3, 0))
end

-- Island Teleport System
local islandCoords = {
    ["Weather Machine"] = Vector3.new(-1471, -3, 1929), ["Esoteric Depths"] = Vector3.new(3157, -1303, 1439), ["Tropical Grove"] = Vector3.new(-2038, 3, 3650),
    ["Stingray Shores"] = Vector3.new(-32, 4, 2773), ["Kohana Volcano"] = Vector3.new(-519, 24, 189), ["Coral Reefs"] = Vector3.new(-3095, 1, 2177),
    ["Crater Island"] = Vector3.new(968, 1, 4854), ["Kohana"] = Vector3.new(-658, 3, 719), ["Winter Fest"] = Vector3.new(1611, 4, 3280),
    ["Isoteric Island"] = Vector3.new(1987, 4, 1400), ["Treasure Hall"] = Vector3.new(-3600, -267, -1558), ["Lost Shore"] = Vector3.new(-3663, 38, -989),
    ["Sishypus Statue"] = Vector3.new(-3792, -135, -986)
}
local function teleportToIsland(islandName)
    local position = islandCoords[islandName]
    if not position then updateStatus("ERROR: Pulau tidak ditemukan."); return end
    local charFolder = workspace:WaitForChild("Characters", 5)
    local char = charFolder:FindFirstChild(localPlayer.Name)
    if not char then updateStatus("ERROR: Karakter tidak ditemukan."); return end
    local hrp = char:FindFirstChild("HumanoidRootPart") or char:WaitForChild("HumanoidRootPart", 3)
    if not hrp then updateStatus("ERROR: HumanoidRootPart tidak ditemukan."); return end
    hrp.CFrame = CFrame.new(position + Vector3.new(0, 5, 0))
    updateStatus("Berhasil teleport ke " .. islandName)
end

-- Event Teleport System
local eventsList = { "Shark Hunt", "Ghost Shark Hunt", "Worm Hunt", "Black Hole", "Shocked", "Ghost Worm", "Meteor Rain" }
local function teleportToEvent(eventName)
    local props = workspace:FindFirstChild("Props")
    if props and props:FindFirstChild(eventName) and props[eventName]:FindFirstChild("Fishing Boat") then
        local fishingBoat = props[eventName]["Fishing Boat"]
        local boatCFrame = fishingBoat:GetPivot()
        local hrp = localPlayer.Character:FindFirstChild("HumanoidRootPart")
        if hrp then
            hrp.CFrame = boatCFrame + Vector3.new(0, 15, 0)
            updateStatus("Berhasil teleport ke event: " .. eventName)
        end
    else
        updateStatus("Event " .. eventName .. " tidak ditemukan!")
    end
end

-- NPC Teleport System
local function getNPCList()
    local npcFolder = ReplicatedStorage:WaitForChild("NPC")
    local npcList = {}
    for _, npc in pairs(npcFolder:GetChildren()) do
        if npc:IsA("Model") then
            local hrp = npc:FindFirstChild("HumanoidRootPart") or npc.PrimaryPart
            if hrp then table.insert(npcList, npc.Name) end
        end
    end
    return npcList
end
local function teleportToNPC(npcName)
    local npcFolder = ReplicatedStorage:WaitForChild("NPC")
    local npc = npcFolder:FindFirstChild(npcName)
    if npc and npc:IsA("Model") then
        local hrp = npc:FindFirstChild("HumanoidRootPart") or npc.PrimaryPart
        if hrp then
            local charFolder = workspace:FindFirstChild("Characters", 5)
            local char = charFolder and charFolder:FindFirstChild(localPlayer.Name)
            if not char then return end
            local myHRP = char:FindFirstChild("HumanoidRootPart")
            if myHRP then
                myHRP.CFrame = hrp.CFrame + Vector3.new(0, 3, 0)
                updateStatus("Berhasil teleport ke NPC: " .. npcName)
            end
        end
    end
end

-- Server Hop Function
local function ServerHop()
    local placeId = game.PlaceId
    local servers = {}
    local cursor = ""
    repeat
        local url = "https://games.roblox.com/v1/games/"..placeId.."/servers/Public?sortOrder=Asc&limit=100"
        if cursor ~= "" then url = url .. "&cursor=" .. cursor end
        local success, result = pcall(function() return HttpService:JSONDecode(game:HttpGet(url)) end)
        if success and result and result.data then
            for _, server in pairs(result.data) do
                if server.playing < server.maxPlayers and server.id ~= game.JobId then
                    table.insert(servers, server.id)
                end
            end
            cursor = result.nextPageCursor or ""
        else break end
    until not cursor or #servers > 0
    if #servers > 0 then
        local targetServer = servers[math.random(1, #servers)]
        TeleportService:TeleportToPlaceInstance(placeId, targetServer, localPlayer)
        updateStatus("Server hop berhasil!")
    else
        updateStatus("GAGAL: Tidak ada server yang tersedia!")
    end
end

-- Boost FPS Function
local function BoostFPS()
    for _, v in pairs(game:GetDescendants()) do
        if v:IsA("BasePart") then v.Material = Enum.Material.SmoothPlastic; v.Reflectance = 0
        elseif v:IsA("Decal") or v:IsA("Texture") then v.Transparency = 1 end
    end
    local Lighting = game:GetService("Lighting")
    for _, effect in pairs(Lighting:GetChildren()) do
        if effect:IsA("PostEffect") then effect.Enabled = false end
    end
    Lighting.GlobalShadows = false
    Lighting.FogEnd = 1e10
    settings().Rendering.QualityLevel = "Level01"
    updateStatus("Boost FPS diaktifkan!")
end

-- HDR Shader Function
local function ApplyHDRShader()
    local success, err = pcall(function() loadstring(game:HttpGet("https://pastebin.com/raw/avvr1gTW"))() end)
    if success then updateStatus("HDR Shader berhasil diaplikasikan!")
    else updateStatus("GAGAL memuat HDR Shader: " .. tostring(err)) end
end

-- Logika ESP & Name Tags
local skeletonConnections = {{"Head", "UpperTorso"}, {"UpperTorso", "LowerTorso"}, {"UpperTorso", "LeftUpperArm"}, {"LeftUpperArm", "LeftLowerArm"},{"UpperTorso", "RightUpperArm"}, {"RightUpperArm", "RightLowerArm"}, {"LowerTorso", "LeftUpperLeg"},{"LeftUpperLeg", "LeftLowerLeg"}, {"LowerTorso", "RightUpperLeg"}, {"RightUpperLeg", "RightLowerLeg"}}
local function getLimb(char, limbName) return char and char:FindFirstChild(limbName, true) end
RunService.RenderStepped:Connect(function()
    espGui.Enabled = espEnabled or nameTagsEnabled
    if not espGui.Enabled then return end
    local camera = workspace.CurrentCamera
    for player, elements in pairs(espElements) do
        if player ~= localPlayer and player.Character and player.Character.PrimaryPart then
            local char = player.Character; local hrp = char.PrimaryPart; local head = getLimb(char, "Head"); local screenPos, onScreen = camera:WorldToScreenPoint(hrp.Position)
            if onScreen then
                if elements.Line then elements.Line.Visible = espEnabled; elements.Line.From = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y); elements.Line.To = Vector2.new(screenPos.X, screenPos.Y) end
                if elements.Skeleton then for _, line in pairs(elements.Skeleton) do line.Visible = espEnabled end; for _, v in ipairs(skeletonConnections) do local p1, p2 = getLimb(char, v[1]), getLimb(char, v[2]); if p1 and p2 then local pos1, vis1 = camera:WorldToScreenPoint(p1.Position); local pos2, vis2 = camera:WorldToScreenPoint(p2.Position); if vis1 and vis2 and elements.Skeleton[v[1]..v[2]] then elements.Skeleton[v[1]..v[2]].From = Vector2.new(pos1.X, pos1.Y); elements.Skeleton[v[1]..v[2]].To = Vector2.new(pos2.X, pos2.Y) end end end end
                if elements.NameTag then local headPos, headOnScreen = camera:WorldToScreenPoint(head.Position); if headOnScreen then elements.NameTag.Visible = nameTagsEnabled; elements.NameTag.Position = UDim2.fromOffset(headPos.X - elements.NameTag.TextBounds.X / 2, headPos.Y - 35); elements.NameTag.TextColor3 = nameTagColor end end
            else
                if elements.Line then elements.Line.Visible = false end; if elements.Skeleton then for _, line in pairs(elements.Skeleton) do line.Visible = false end end; if elements.NameTag then elements.NameTag.Visible = false end
            end
        else
            if elements.Line then elements.Line.Visible = false end; if elements.Skeleton then for _, line in pairs(elements.Skeleton) do line.Visible = false end end; if elements.NameTag then elements.NameTag.Visible = false end
        end
    end
end)
local function cleanupPlayer(player) if espElements[player] then for _, v in pairs(espElements[player]) do if type(v) == "table" then for _, k in pairs(v) do k:Destroy() end else pcall(v.Destroy, v) end end; espElements[player] = nil end end
local function setupPlayer(player) cleanupPlayer(player); local elements = {Line = Drawing.new("Line"), Skeleton = {}, NameTag = Instance.new("TextLabel", espGui)}; elements.Line.Color = Color3.fromRGB(255, 0, 0); elements.Line.Thickness = 1; elements.Line.Visible = false; elements.NameTag.Text = player.DisplayName; elements.NameTag.Font = Enum.Font.SourceSans; elements.NameTag.TextSize = 16; elements.NameTag.TextColor3 = nameTagColor; elements.NameTag.BackgroundTransparency = 1; elements.NameTag.TextStrokeTransparency = 0.5; elements.NameTag.Visible = false; for _, v in ipairs(skeletonConnections) do local line = Drawing.new("Line"); line.Color = Color3.fromRGB(0, 255, 0); line.Thickness = 1; line.Visible = false; elements.Skeleton[v[1]..v[2]] = line end; espElements[player] = elements end
for _, player in ipairs(Players:GetPlayers()) do if player ~= localPlayer then setupPlayer(player) end end
Players.PlayerAdded:Connect(function(player) if player ~= localPlayer then setupPlayer(player) end end)
Players.PlayerRemoving:Connect(cleanupPlayer)

-- ================================================================================= --
--[[ BAGIAN 4: KONFIGURASI UI (Lates-Lib) ]]
-- ================================================================================= --

-- Salin tabel Themes dari ui_library.txt
local Themes = {
	Light = {
		Primary = Color3.fromRGB(232, 232, 232), Secondary = Color3.fromRGB(255, 255, 255), Component = Color3.fromRGB(245, 245, 245), Interactables = Color3.fromRGB(235, 235, 235),
		Tab = Color3.fromRGB(50, 50, 50), Title = Color3.fromRGB(0, 0, 0), Description = Color3.fromRGB(100, 100, 100),
		Shadow = Color3.fromRGB(255, 255, 255), Outline = Color3.fromRGB(210, 210, 210), Icon = Color3.fromRGB(100, 100, 100),
	},
	Dark = {
		Primary = Color3.fromRGB(30, 30, 30), Secondary = Color3.fromRGB(35, 35, 35), Component = Color3.fromRGB(40, 40, 40), Interactables = Color3.fromRGB(45, 45, 45),
		Tab = Color3.fromRGB(200, 200, 200), Title = Color3.fromRGB(240,240,240), Description = Color3.fromRGB(200,200,200),
		Shadow = Color3.fromRGB(0, 0, 0), Outline = Color3.fromRGB(40, 40, 40), Icon = Color3.fromRGB(220, 220, 220),
	},
	Void = {
		Primary = Color3.fromRGB(15, 15, 15), Secondary = Color3.fromRGB(20, 20, 20), Component = Color3.fromRGB(25, 25, 25), Interactables = Color3.fromRGB(30, 30, 30),
		Tab = Color3.fromRGB(200, 200, 200), Title = Color3.fromRGB(240,240,240), Description = Color3.fromRGB(200,200,200),
		Shadow = Color3.fromRGB(0, 0, 0), Outline = Color3.fromRGB(40, 40, 40), Icon = Color3.fromRGB(220, 220, 220),
	},
}

-- Inisialisasi Window. Ini akan mengaktifkan fungsi updateStatus
Window = Library:CreateWindow({
	Title = "Reel Only Fish + Tools",
	Theme = "Dark",
	Size = UDim2.fromOffset(570, 480), 
	Transparency = 0.2,
	Blurring = true,
	MinimizeKeybind = Enum.KeyCode.K
}) 

-- Set tema default
Window:SetTheme(Themes.Dark)

-- Fungsi helper untuk mengubah daftar biasa menjadi format Options [ { "Tampilan" = "Nilai" }, ... ]
local function convertListToOptions(list)
    local options = {}
    for _, v in ipairs(list) do
        options[v] = v
    end
    return options
end

-- Bagian Tab (Tab Sections) - Diperbarui
Window:AddTabSection({ Name = "Fishing", Order = 1 })
Window:AddTabSection({ Name = "Teleport", Order = 2 })
Window:AddTabSection({ Name = "Tools", Order = 3 })
Window:AddTabSection({ Name = "Settings", Order = 4 })

-- TAB: REEL ONLY FISH
local FishItTab = Window:AddTab({ Title = "Reel Only Fish", Section = "Fishing" })

Window:AddSection({ Name = "Reel Timing Settings", Tab = FishItTab })
Window:AddInput({
	Title = "Bite Wait Time",
	Description = "Default: 0.8",
	Tab = FishItTab,
    Default = "0.8", -- Ditambahkan kembali
	Callback = function(Text)
		local num = tonumber(Text)
		if num and num >= 0.5 then
			ReelOnlyFish.WaitTime = num
			updateStatus("Reel wait: " .. num .. "s")
		end
	end,
})

Window:AddSection({ Name = "Controls", Tab = FishItTab })
Window:AddToggle({ Title = "ðŸŽ£ START REEL ONLY FISH", Description = "Mulai auto fishing (mode reel only)", Tab = FishItTab, Default = false, Callback = function(Value) if Value then startReelOnlyFishing() else stopReelOnlyFishing() end end, })
Window:AddButton({ Title = "Test Reel Timing", Description = "Coba berbagai pengaturan waktu", Tab = FishItTab, Callback = testReelTiming, })
Window:AddButton({ Title = "ðŸ›‘ STOP REEL FISH", Description = "Hentikan auto fishing", Tab = FishItTab, Callback = stopReelOnlyFishing, })

Window:AddSection({ Name = "Reel Timing Presets", Tab = FishItTab })
Window:AddButton({ Title = "âš¡ FAST REEL (0.7s)", Description = "Atur waktu tunggu ke 0.7 detik", Tab = FishItTab, Callback = function() ReelOnlyFish.WaitTime = 0.7; updateStatus("FAST REEL: 0.7s wait") end, })
Window:AddButton({ Title = "ðŸš€ ULTRA REEL (0.6s)", Description = "Atur waktu tunggu ke 0.6 detik", Tab = FishItTab, Callback = function() ReelOnlyFish.WaitTime = 0.6; updateStatus("ULTRA REEL: 0.6s wait") end, })
Window:AddButton({ Title = "ðŸŽ¯ OPTIMAL REEL (0.8s)", Description = "Atur waktu tunggu ke 0.8 detik", Tab = FishItTab, Callback = function() ReelOnlyFish.WaitTime = 0.8; updateStatus("OPTIMAL REEL: 0.8s wait") end, })

Window:AddSection({ Name = "Auto Management", Tab = FishItTab })
Window:AddToggle({ Title = "Auto Sell", Description = "Jual item non-favorit secara otomatis", Tab = FishItTab, Default = false, Callback = function(Value) state.AutoSell = Value; if Value then startAutoSell(); updateStatus("Auto Sell Dihidupkan.") else updateStatus("Auto Sell Dimatikan.") end end })
Window:AddToggle({ Title = "Auto Favorite", Description = "Favoritkan item langka secara otomatis", Tab = FishItTab, Default = false, Callback = function(Value) state.AutoFavourite = Value; if Value then startAutoFavourite(); updateStatus("Auto Favorite Dihidupkan.") else updateStatus("Auto Favorite Dimatikan.") end end })

Window:AddSection({ Name = "Manual Actions", Tab = FishItTab })
Window:AddButton({ Title = "Sell All Fishes", Description = "Jual semua ikan di inventaris", Tab = FishItTab, Callback = sellAllFishes })
Window:AddButton({ Title = "Auto Enchant Rod", Description = "Pergi dan enchant pancing (slot 5)", Tab = FishItTab, Callback = autoEnchantRod })

Window:AddSection({ Name = "Utilitas Lainnya", Tab = FishItTab })
Window:AddToggle({ Title = "Jalan di Atas Air (Platform)", Description = "Membuat platform di bawah kaki", Tab = FishItTab, Default = walkOnWaterEnabled, Callback = function(Value) walkOnWaterEnabled = Value; updateStatus("Jalan di Atas Air " .. (Value and "DIHIDUPKAN" or "DIMATIKAN")) end })
Window:AddToggle({ Title = "Anti AFK", Description = "Lompat sesekali agar tidak AFK", Tab = FishItTab, Default = antiAfkEnabled, Callback = function(Value) antiAfkEnabled = Value; updateStatus("Anti AFK " .. (Value and "ON" or "OFF")) end })

-- TAB: TELEPORT
local TeleportTab = Window:AddTab({ Title = "Teleport", Section = "Teleport" })

Window:AddSection({ Name = "Island Teleport", Tab = TeleportTab })
Window:AddDropdown({ Title = "Pilih Pulau", Description = "Teleport ke pulau yang dipilih", Tab = TeleportTab, Options = convertListToOptions({"Weather Machine", "Esoteric Depths", "Tropical Grove", "Stingray Shores", "Kohana Volcano", "Coral Reefs", "Crater Island", "Kohana", "Winter Fest", "Isoteric Island", "Treasure Hall", "Lost Shore", "Sishypus Statue"}), Callback = function(Value) teleportToIsland(Value) end })

Window:AddSection({ Name = "Event Teleport", Tab = TeleportTab })
Window:AddDropdown({ Title = "Pilih Event", Description = "Teleport ke event yang sedang aktif", Tab = TeleportTab, Options = convertListToOptions(eventsList), Callback = function(Value) teleportToEvent(Value) end })

Window:AddSection({ Name = "NPC Teleport", Tab = TeleportTab })
Window:AddDropdown({ Title = "Pilih NPC", Description = "Teleport ke NPC yang dipilih", Tab = TeleportTab, Options = convertListToOptions(getNPCList()), Callback = function(Value) teleportToNPC(Value) end })

Window:AddSection({ Name = "Player Teleport", Tab = TeleportTab })
local selectedPlayerToTeleport = nil
local function getPlayerNames()
    local names = {}
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= localPlayer then table.insert(names, player.Name) end
    end
    return names
end
Window:AddDropdown({ Title = "Pilih Player", Description = "Pilih pemain untuk diteleportasi", Tab = TeleportTab, Options = convertListToOptions(getPlayerNames()), Callback = function(Value) selectedPlayerToTeleport = Players:FindFirstChild(Value); if selectedPlayerToTeleport then updateStatus("Player dipilih: " .. selectedPlayerToTeleport.Name) end end })
Window:AddButton({ Title = "Teleport ke Player", Description = "Teleport ke lokasi pemain yang dipilih", Tab = TeleportTab, Callback = function() if not selectedPlayerToTeleport or not selectedPlayerToTeleport.Parent then return updateStatus("Player tidak valid atau sudah keluar.") end; local targetCharacter = selectedPlayerToTeleport.Character; local localCharacter = localPlayer.Character; local targetHRP = targetCharacter and targetCharacter:FindFirstChild("HumanoidRootPart"); local localHRP = localCharacter and localCharacter:FindFirstChild("HumanoidRootPart"); if targetHRP and localHRP then localHRP.CFrame = targetHRP.CFrame; updateStatus("Berhasil teleport ke " .. selectedPlayerToTeleport.Name) else updateStatus("Gagal teleport: Player target atau karakter Anda tidak valid.") end end })

-- TAB: TOOLS
local ToolsTab = Window:AddTab({ Title = "Tools", Section = "Tools" })

Window:AddSection({ Name = "Movement", Tab = ToolsTab })
Window:AddToggle({ Title = "Infinite Jump", Description = "Lompat tanpa batas", Tab = ToolsTab, Default = infiniteJumpEnabled, Callback = function(Value) infiniteJumpEnabled = Value; updateStatus("Infinite Jump " .. (Value and "ON" or "OFF")) end })
Window:AddSlider({ 
    Title = "WalkSpeed", 
    Description = "Atur kecepatan berjalan",
    Tab = ToolsTab, 
    MinValue = 16, -- Ditambahkan kembali
    MaxValue = 200, 
    Default = 16, -- Ditambahkan kembali
    Callback = function(Value) 
        if localPlayer.Character and localPlayer.Character:FindFirstChildOfClass("Humanoid") then 
            localPlayer.Character.Humanoid.WalkSpeed = Value
        end 
end })

Window:AddSection({ Name = "Visuals", Tab = ToolsTab })
Window:AddToggle({ Title = "ESP Player", Description = "Lihat pemain menembus dinding", Tab = ToolsTab, Default = espEnabled, Callback = function(Value) espEnabled = Value; updateStatus("ESP " .. (Value and "ON" or "OFF")) end })
Window:AddToggle({ Title = "Name Tags", Description = "Tampilkan nama pemain di atas kepala", Tab = ToolsTab, Default = nameTagsEnabled, Callback = function(Value) nameTagsEnabled = Value; updateStatus("Name Tags " .. (Value and "ON" or "OFF")) end })

Window:AddSection({ Name = "Server Utilities", Tab = ToolsTab })
Window:AddButton({ Title = "Server Hop", Description = "Pindah ke server publik acak", Tab = ToolsTab, Callback = ServerHop })
Window:AddButton({ Title = "Boost FPS", Description = "Kurangi lag", Tab = ToolsTab, Callback = BoostFPS })
Window:AddButton({ Title = "HDR Shader", Description = "Terapkan shader grafis HDR", Tab = ToolsTab, Callback = ApplyHDRShader })

Window:AddSection({ Name = "Lainnya", Tab = ToolsTab })
Window:AddButton({ Title = "Copy Avatar", Description = "Jalankan skrip penyalin avatar", Tab = ToolsTab, Callback = function() updateStatus("Memuat script Copy Avatar..."); local success, err = pcall(function() loadstring(game:HttpGet("https://raw.githubusercontent.com/MRSt3Ss/roblox/refs/heads/main/copyava"))() end); if success then updateStatus("Script Copy Avatar berhasil dijalankan.") else updateStatus("Gagal memuat skrip: " .. tostring(err)) end end })

-- TAB: SETTINGS (Dari contoh ui_library.txt)
local SettingsTab = Window:AddTab({
	Title = "Settings",
	Section = "Settings",
	Icon = "rbxassetid://11293977610",
})

Window:AddKeybind({
	Title = "Minimize Keybind",
	Description = "Set the keybind for Minimizing",
	Tab = SettingsTab,
    Default = Enum.KeyCode.K, -- Ditambahkan kembali
	Callback = function(Key) 
		Window:SetSetting("Keybind", Key)
	end,
}) 

Window:AddDropdown({
	Title = "Set Theme",
	Description = "Set the theme of the library!",
	Tab = SettingsTab,
	Options = {
		["Light Mode"] = "Light",
		["Dark Mode"] = "Dark",
		["Extra Dark"] = "Void",
	},
    Default = "Dark", -- Ditambahkan kembali
	Callback = function(Theme) 
		Window:SetTheme(Themes[Theme])
	end,
}) 

Window:AddToggle({
	Title = "UI Blur",
	Description = "If enabled, must have your Roblox graphics set to 8+ for it to work",
	Default = true, -- Ini sudah ada dan benar
	Tab = SettingsTab,
	Callback = function(Boolean) 
		Window:SetSetting("Blur", Boolean)
	end,
}) 

Window:AddSlider({
	Title = "UI Transparency",
	Description = "Set the transparency of the UI",
	Tab = SettingsTab,
	AllowDecimals = true,
    Default = 0.2, -- Ditambahkan kembali
	MaxValue = 1,
	Callback = function(Amount) 
		Window:SetSetting("Transparency", Amount)
	end,
}) 

-- Notifikasi Awal
updateStatus("Reel Only Fish Loaded! Use 'Test Reel Timing' first.")
Window:Notify({
	Title = "Hello World!",
	Description = "Press K to Minimize and Open the tab!",
	Duration = 10
})

-- Auto re-equip and hold reel on respawn
localPlayer.CharacterAdded:Connect(function()
    if ReelOnlyFish.Enabled then
        task.wait(2)
        pcall(function()
            ReelRemotes.EquipTool:FireServer(1)
            task.wait(0.5)
            ReelRemotes.UpdateChargeState:FireServer(true)
        end)
        updateStatus("Auto-resumed holding reel")
    end
end)
